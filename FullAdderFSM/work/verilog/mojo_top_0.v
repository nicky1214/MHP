/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    output reg spi_miso,
    output reg [3:0] spi_channel,
    output reg avr_rx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [23:0] io_dip,
    input s,
    input cout,
    output reg a,
    output reg b,
    output reg cin
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_fulladder_FSM_a;
  wire [1-1:0] M_fulladder_FSM_b;
  wire [1-1:0] M_fulladder_FSM_cin;
  wire [8-1:0] M_fulladder_FSM_state_indicator;
  reg [1-1:0] M_fulladder_FSM_s;
  reg [1-1:0] M_fulladder_FSM_cout;
  reg [1-1:0] M_fulladder_FSM_autotoggle;
  reg [1-1:0] M_fulladder_FSM_man_a;
  reg [1-1:0] M_fulladder_FSM_man_b;
  reg [1-1:0] M_fulladder_FSM_man_cin;
  fulladder_FSM_2 fulladder_FSM (
    .clk(clk),
    .rst(rst),
    .s(M_fulladder_FSM_s),
    .cout(M_fulladder_FSM_cout),
    .autotoggle(M_fulladder_FSM_autotoggle),
    .man_a(M_fulladder_FSM_man_a),
    .man_b(M_fulladder_FSM_man_b),
    .man_cin(M_fulladder_FSM_man_cin),
    .a(M_fulladder_FSM_a),
    .b(M_fulladder_FSM_b),
    .cin(M_fulladder_FSM_cin),
    .state_indicator(M_fulladder_FSM_state_indicator)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = M_fulladder_FSM_state_indicator;
    io_led[0+7-:8] = {4'h8{M_fulladder_FSM_cin}};
    io_led[8+7-:8] = {4'h8{M_fulladder_FSM_b}};
    io_led[16+7-:8] = {4'h8{M_fulladder_FSM_a}};
    a = M_fulladder_FSM_a;
    b = M_fulladder_FSM_b;
    cin = M_fulladder_FSM_cin;
    M_fulladder_FSM_s = s;
    M_fulladder_FSM_cout = cout;
    M_fulladder_FSM_autotoggle = io_dip[16+0+0-:1];
    M_fulladder_FSM_man_a = io_dip[0+2+0-:1];
    M_fulladder_FSM_man_b = io_dip[0+1+0-:1];
    M_fulladder_FSM_man_cin = io_dip[0+0+0-:1];
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    io_seg = 8'hff;
    io_sel = 4'hf;
  end
endmodule
